- How to handle item names? 
    - Should there be a list of predefined items? A drop down? 
    - Maybe there's an API with kitchen items that I can connect to? 
    - FOOD DATABASE API
    - How does this then affect the categories? 
        - User could select category themselves 
    - What is the benefit of using the API?
        - specificity 
        - additional practice and learning
    - Disadvantage
        - Additional complexity in building
        - Not 100% sure if its even beneficial, since it will still have to be transferred to inventory the same way
    - Decision
        - Use manual updae for now, but save a list of possible food APIs
        - starting out smaller should help with TDD and iterative developemnt


Checklist Functionality 
- CREATE (add) an item to the Checklist
- DELETE (check off) an item from the Checklist 
- READ all items in the Checklist
- PUT (UPDATE) an item in the checklist / perhaps patch? 

Inventory Functionality
- CREATE (add) an item via Checklist
- CREATE (add) an item via Inventory
- DELETE an item via Inventory
- PUT (UPDATE) an item via checklist (e.g. if purchasing an additional item) perhaps patch? 
- PUT (UPDATE) an item via Inventory (e.g. if chaning amount in inventory) perhaps patch? 
- READ entire inventory 
- READ inventory by category 

Is it better to read the entire inventory at once, or by category?
- For the user, split into category is best, I think

Additional notes:
- Data sent in JSON format between backend and dbz


Possible future functionality:
- Scan to include in inventory (UPC barcode scanning)
- Edamam food api 
https://developer.edamam.com/food-database-api-demo
https://fdc.nal.usda.gov/api-guide.html
https://rapidapi.com/collection/nutrition

import { petStoreOas3Def } from "../default-definitions"
const CONTENT_KEY = "swagger-editor-content"