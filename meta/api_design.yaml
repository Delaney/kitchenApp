openapi: 3.0.3
info:
  title: Kitchen App
  version: 1.0.0
  description: An application for managing your kitchen inventory
paths:
  /checklist:
    summary: The checklist side of the application
    description: The checklist stores all items for purchasing
    get:
      summary: 'Retrieves all the items in the checklist '
      description: ''
      operationId: get_checklist
      responses:
        '200':
          description: Successful response with checklist items.
          content:
            application/json:
              example:
                checklist_items:
                  value:
                    items:
                      - checklist_id: 1
                        item_name: Apples
                        quantity: 3
                        category: Fruit
                        purchased: false
                      - checklist_id: 2
                        item_name: Bread
                        quantity: 2
                        category: Bakery
                        purchased: false
                      - checklist_id: 3
                        item_name: Milk
                        quantity: 1
                        category: Dairy
                        purchased: false
                      - // Additional checklist items go here...
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: List of checklist items.
                    items:
                      type: object
                      properties:
                        checklist_id:
                          type: integer
                          description: The unique identifier for the checklist item.
                        item_name:
                          type: string
                          description: The name of the grocery item.
                        quantity:
                          type: integer
                          description: The quantity of the grocery item.
                        category:
                          type: string
                          description: The category the grocery item belongs to
                        purchased:
                          type: boolean
                          description: >-
                            Indicates if the item has been purchased (always set
                            to false for this example).
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error that occurred.
      tags:
        - Get Checklist
    post:
      summary: 'Adds a new item to the checklist '
      description: Sends a new item to be included in the Checklist table in the database
      operationId: add_to_checklist
      requestBody:
        description: New checklist item data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_name:
                  type: string
                  description: The name of the grocery item
                quantity:
                  type: integer
                  description: The quantity of the grocery item
                category_id:
                  type: integer
                  description: The ID of the item category
            example:
              item_name: Apples
              quantity: 3
              category_id: 2
      responses:
        '201':
          description: Successful response with the newly created checklist item.
          content:
            application/json:
              schema:
                type: object
                properties:
                  checklist_id:
                    type: integer
                    description: The unique identifier for the checklist item.
                  item_name:
                    type: string
                    description: The name of the grocery item.
                  quantity:
                    type: integer
                    description: The quantity of the grocery item.
                  purchased:
                    type: boolean
                    description: >-
                      Indicates if the item has been purchased (always set to
                      false for this example).
              example:
                checklist_id: 4
                item_name: Apples
                quantity: 3
                category: Fruit
                purchased: false
        '400':
          description: Bad Request - The request contains invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the validation error.
              example:
                error: string
      tags:
        - Add to Checklist
        
  /checklist/{checklistID}:
    summary: A specific item in the checklist
    description: Refers to a particular item which is on the checklist
    parameters:
      - name: checklistID
        in: path
        description: The id of the checklist item.
        required: true
        schema:
          type: string
    patch:
      summary: Partially updates an item in the checklist
      description: Partially updates an item in the checklist.
      operationId: partially_update_checklist_item
      tags:
        - Update Checklist item
      requestBody:
        description: Updated checklist item data (only include fields to be updated).
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_name:
                  type: string
                  description: The updated name of the grocery item.
                quantity:
                  type: integer
                  description: The updated quantity of the grocery item.
                category:
                  type: string
                  description: The updated category of the grocery item.
                purchased:
                  type: boolean
                  description: The updated purchased status.
              example:
                quantity: 5
      responses:
        '200':
          description: Successful response with the updated checklist item.
          content:
            application/json:
              schema:
                type: object
                properties:
                  checklist_id:
                    type: integer
                    description: The unique identifier for the checklist item.
                  item_name:
                    type: string
                    description: The name of the grocery item.
                  quantity:
                    type: integer
                    description: The updated quantity of the grocery item.
                  purchased:
                    type: boolean
                    description: The updated purchased status.
              example:
                checklist_id: 4
                item_name: Apples
                quantity: 5
                category: Fruit
                purchased: false
        '400':
          description: Bad Request - The request contains invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the validation error.
              example:
                error: Invalid input data. Please check your request.
    delete:
      summary: Deletes an item from the checklist
      description: Deletes an existing item by ID from the Checklist table in the database
      operationId: delete_checklist_item
      responses:
        '204':
          description: Item successfully deleted.
        '404':
          description: Not Found - The requested checklist item does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: Checklist item not found.
      tags:
        - Delete Checklist item
  /inventory:
    summary: Gets all items in the inventory
    description: Retrieves all the items in the Inventory table in the database
    get:
      summary: Retrieves all the items in the inventory
      description: ''
      operationId: get_inventory
      responses:
        '200':
          description: Successful response with an array of inventory items.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier for the inventory item.
                    item_name:
                      type: string
                      description: The name of the inventory item.
                    quantity:
                      type: integer
                      description: The quantity of the inventory item.
                    category_id:
                      type: integer
                      description: The ID of the category for the inventory item.
              example:
                - id: 1
                  item_name: Apples
                  quantity: 10
                  category_id: 2
                - id: 2
                  item_name: Milk
                  quantity: 2
                  category_id: 4
        '404':
          description: Not Found - No inventory items found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: No inventory items found.
        '500':
          description: Internal Server Error - A server error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: Internal Server Error. Please try again later.
      tags:
        - Get Inventory
    post:
      summary: Adds a new item to the inventory
      description: >-
        Adds a new item to be included in the Inventory table in the database,
        either through being ticked off in the checklist, or manually in the
        inventory
      operationId: add_to_inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_name:
                  type: string
                  description: The name of the inventory item.
                  example: Eggs
                quantity:
                  type: integer
                  description: The quantity of the inventory item.
                  example: 12
                category_id:
                  type: integer
                  description: The ID of the category for the inventory item.
                  example: 3
      responses:
        '201':
          description: Item successfully added to the inventory.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier for the added inventory item.
                  item_name:
                    type: string
                    description: The name of the added inventory item.
                  quantity:
                    type: integer
                    description: The quantity of the added inventory item.
                  category_id:
                    type: integer
                    description: The ID of the category for the added inventory item.
              example:
                id: 6
                item_name: Eggs
                quantity: 12
                category_id: 3
        '400':
          description: Bad Request - Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: Invalid input data. Please check the request body.
        '500':
          description: Internal Server Error - A server error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: Internal Server Error. Please try again later.
      tags:
        - Add to Inventory
  /inventory/{category}:
    summary: Gets all items in a specific category of the inventory
    description: >-
      Retrieves all the items in the specified category of the Inventory table
      in the database
    parameters:
      - name: category
        in: path
        description: A sub-category in the inventory.
        required: true
        schema:
          type: string
    get:
      summary: Retrieves all the items in a specified category of the inventory
      description: ''
      operationId: get_inventory_category
      responses:
        '200':
          description: >-
            Successful response with an array of inventory items in the
            specified category.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier for the inventory item.
                    item_name:
                      type: string
                      description: The name of the inventory item.
                    quantity:
                      type: integer
                      description: The quantity of the inventory item.
                    category_id:
                      type: integer
                      description: The ID of the category for the inventory item.
              example:
                - id: 1
                  item_name: Milk
                  quantity: 2
                  category_id: 4
                - id: 2
                  item_name: Yogurt
                  quantity: 5
                  category_id: 4
        '404':
          description: Not Found - No inventory items found in the specified category.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: No inventory items found in the specified category.
        '500':
          description: Internal Server Error - A server error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: Internal Server Error. Please try again later.
      tags:
        - Get Inventory category
  /inventory/{inventoryID}:
    summary: Manipulates an item in the Inventory
    description: >-
      Manipulates an existing item by ID from the Inventory table in the
      database.
    parameters:
      - name: inventoryID
        in: path
        description: The id of the inventory item.
        required: true
        schema:
          type: string
    patch:
      summary: Partially updates an item in the inventory
      description: Updates an existing item by ID from the Inventory table in the database.
      operationId: update_inventory_item
      tags:
        - Update Inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_name:
                  type: string
                  description: The updated name of the inventory item.
                  example: New Name
                quantity:
                  type: integer
                  description: The updated quantity of the inventory item.
                  example: 15
                category_id:
                  type: integer
                  description: The updated ID of the category for the inventory item.
                  example: 4
      responses:
        '200':
          description: Item in the inventory successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier for the updated inventory item.
                  item_name:
                    type: string
                    description: The updated name of the inventory item.
                  quantity:
                    type: integer
                    description: The updated quantity of the inventory item.
                  category_id:
                    type: integer
                    description: The updated ID of the category for the inventory item.
              example:
                id: 6
                item_name: New Name
                quantity: 15
                category_id: 4
        '400':
          description: Bad Request - Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: Invalid input data. Please check the request body.
        '404':
          description: Not Found - Inventory item not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
              example:
                error: Inventory item not found.
        '500':
          description: Internal Server Error - A server error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: Internal Server Error. Please try again later.
    delete:
      summary: Delete an existing item from the inventory
      description: Deletes an existing item by ID from the Inventory table in the database
      operationId: delete_inventory_item
      responses:
        '204':
          description: Item successfully deleted.
        '404':
          description: Item not found - The specified inventory item does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
                example:
                  error: Inventory item not found.
        '500':
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
                example:
                  error: Internal Server Error. Please try again later.
      tags:
        - Delete Inventory item
  /categories:
    summary: The categories for items in the inventory
    get:
      summary: Returns all categories
      description: ''
      operationId: get_categories
      responses:
        '200':
          description: Successful response with a list of categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier for the category.
                    category_name:
                      type: string
                      description: The name of the category.
              example:
                - id: 1
                  category_name: Fruit
                - id: 2
                  category_name: Vegetables
                - id: 3
                  category_name: Dairy
                - id: 4
                  category_name: Bakery
        '500':
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
                example:
                  error: Internal Server Error. Please try again later.
        default:
          description: Default error sample response
      tags:
        - Get Categories
    post:
      summary: Adds a new category
      description: Adds a new category to the Categories table in the database.
      operationId: add_category
      requestBody:
        description: Data for the new category.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  description: The name of the new category.
              example:
                category_name: "Laundry"
      responses:
        201:
          description: Category created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier for the new category.
                  category_name:
                    type: string
                    description: The name of the new category.
              example:
                id: 5
                category_name: "Laundry"
        400:
          description: Bad Request - The request contains invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the validation error.
              example:
                error: "Invalid input data. Please check your request."
        500:
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: "Internal Server Error. Please try again later."
      tags: 
      - Add Category

  /categories/{categoryID}:
    parameters:
      - name: categoryID
        in: path
        description: The ID of the category to update.
        required: true
        schema:
          type: integer
    patch:
      summary: Partially updates a category
      description: Partially updates an existing category by ID in the Categories table in the database.
      operationId: update_category
      requestBody:
        description: Updated category data (only include fields to be updated).
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  description: The updated name of the category.
              example:
                category_name: "Laundry and Dishwashing"
      responses:
        200:
          description: Category updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier for the updated category.
                  category_name:
                    type: string
                    description: The updated name of the category.
              example:
                id: 5
                category_name: "Laundry and Dishwashing"
        400:
          description: Bad Request - The request contains invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the validation error.
              example:
                error: "Invalid input data. Please check your request."
        404:
          description: Category not found - The specified category ID does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the not found error.
              example:
                error: "Category with ID 5 not found."
        500:
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: "Internal Server Error. Please try again later."
      tags: 
      - Update Category
      
    delete:
      summary: Deletes a category
      description: Deletes an existing category by ID from the Categories table in the database.
      operationId: delete_category
      responses:
        204:
          description: Category deleted successfully. No content.
        404:
          description: Category not found - The specified category ID does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the not found error.
              example:
                error: "Category with ID 5 not found."
        500:
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the server error.
              example:
                error: "Internal Server Error. Please try again later."
      tags: 
      - Delete Category
